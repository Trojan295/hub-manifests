ocfVersion: 0.0.1
revision: 0.1.0
kind: Type
metadata:
  name: deploy-input
  prefix: cap.type.aws.containerization.rke2
  displayName: AWS RKE2 deployment input
  description: Defines input for the AWS RKE2 cluster deployment
  documentationURL: https://capact.io
  supportURL: https://capact.io
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
      url: https://capact.io
spec:
  jsonSchema:
    value: |-
      {
        "$schema": "http://json-schema.org/draft-07/schema",
        "type": "object",
        "required": [],
        "properties": {
          "aws_region": {
            "$id": "#/properties/aws_region",
            "type": "string",
            "description": "AWS region in which RKE2 will be deployed"
          },
          "tags": {
            "$id": "#/properties/tags",
            "type": "object",
            "description": "Tags added to all taggable AWS resources"
          },
          "vpc_cidr": {
            "$id": "#/properties/vpc_cidr",
            "type": "string",
            "description": "CIDR of the VPC"
          },
          "controlplane_internal": {
            "$id": "#/properties/controlplane_internal",
            "type": "boolean",
            "description": "Toggle between public or private control plane load balancer."
          },
          "enable_ccm": {
            "$id": "#/properties/enable_ccm",
            "type": "boolean",
            "description": "Makes the cluster AWS aware; this will ensure the appropriate IAM policies are present."
          },
          "registries_config": {
            "$id": "#/properties/registries_config",
            "type": "string",
            "description": "Content of the /etc/rancher/rke2/registries.yaml file. It will not be created if this is empty."
          },
          "user_data": {
            "$id": "#/properties/user_data",
            "type": "string",
            "description": "Usedata to run on all the nodes in the cluster."
          },
          "nodes_download_dependencies": {
            "$id": "#/properties/nodes_download_dependencies",
            "type": "boolean",
            "description": "Toggle best effort download of RKE2 dependencies (rke2 and aws cli). If disabled, dependencies are assumed to exist in $PATH."
          },
          "server_ami": {
            "$id": "#/properties/server_ami",
            "type": "string",
            "description": "AMI ID for the RKE2 server nodes"
          },
          "server_instance_type": {
            "$id": "#/properties/server_instance_type",
            "type": "string",
            "description": "Instance type of the RKE2 server nodes"
          },
          "agent_ami": {
            "$id": "#/properties/agent_ami",
            "type": "string",
            "description": "AMI ID for the RKE2 agent nodes"
          },
          "agent_instance_type": {
            "$id": "#/properties/agent_instance_type",
            "type": "string",
            "description": "Instance type of the RKE2 agent nodes"
          },
          "use_spot_agents": {
            "$id": "#/properties/use_spot_agents",
            "type": "boolean",
            "description": "Toggle spot requests for server pool."
          },
          "enable_autoscaler": {
            "$id": "#/properties/enable_autoscaler",
            "type": "boolean",
            "description": "Toggle configuration of the nodepool for cluster autoscaler. This will ensure the appropriate IAM policies are present. You are still responsible for ensuring cluster autoscaler is installed."
          },
          "enable_bastion": {
            "$id": "#/properties/enable_bastion",
            "type": "boolean",
            "description": "Toggle deploying the bastion host"
          },
          "bastion_instance_type": {
            "$id": "#/properties/bastion_instance_type",
            "type": "string",
            "description": "Instance type of the bastion node"
          }
        }
      }
